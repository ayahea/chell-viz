// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VizSelectorPanel Should match existing snapshot when given initial viz of Contact Map. 1`] = `
<div
  className="VizSelectorPanel"
  style={
    Object {
      "width": 400,
    }
  }
>
  <Dropdown
    additionLabel="Add "
    additionPosition="top"
    closeOnBlur={true}
    deburr={false}
    fluid={true}
    icon="dropdown"
    minCharacters={1}
    noResultsMessage="No results found."
    onChange={[Function]}
    openOnFocus={true}
    options={
      Array [
        Object {
          "key": "CONTACT_MAP",
          "text": "Contact Map",
          "value": "Contact Map",
        },
        Object {
          "key": "NGL",
          "text": "NGL",
          "value": "NGL",
        },
        Object {
          "key": "SPRING",
          "text": "Spring",
          "value": "Spring",
        },
        Object {
          "key": "T-SNE",
          "text": "T-SNE",
          "value": "T-SNE",
        },
      ]
    }
    placeholder="Select a Visualization!"
    renderLabel={[Function]}
    searchInput="text"
    selectOnBlur={true}
    selectOnNavigation={true}
    wrapSelection={true}
  />
  <Card
    fluid={true}
    raised={true}
  >
    <ContactMapComponentClass
      data={
        Object {
          "contactMonomer": Array [],
          "couplingScore": Array [],
          "distanceMapMonomer": Array [],
        }
      }
    />
  </Card>
</div>
`;

exports[`VizSelectorPanel Should match existing snapshot when given initial viz of NGL. 1`] = `
<div
  className="VizSelectorPanel"
  style={
    Object {
      "width": 400,
    }
  }
>
  <Dropdown
    additionLabel="Add "
    additionPosition="top"
    closeOnBlur={true}
    deburr={false}
    fluid={true}
    icon="dropdown"
    minCharacters={1}
    noResultsMessage="No results found."
    onChange={[Function]}
    openOnFocus={true}
    options={
      Array [
        Object {
          "key": "CONTACT_MAP",
          "text": "Contact Map",
          "value": "Contact Map",
        },
        Object {
          "key": "NGL",
          "text": "NGL",
          "value": "NGL",
        },
        Object {
          "key": "SPRING",
          "text": "Spring",
          "value": "Spring",
        },
        Object {
          "key": "T-SNE",
          "text": "T-SNE",
          "value": "T-SNE",
        },
      ]
    }
    placeholder="Select a Visualization!"
    renderLabel={[Function]}
    searchInput="text"
    selectOnBlur={true}
    selectOnNavigation={true}
    wrapSelection={true}
  />
  <Card
    fluid={true}
    raised={true}
  >
    <NGLComponent />
  </Card>
</div>
`;

exports[`VizSelectorPanel Should match existing snapshot when given initial viz of Spring. 1`] = `
<div
  className="VizSelectorPanel"
  style={
    Object {
      "width": 400,
    }
  }
>
  <Dropdown
    additionLabel="Add "
    additionPosition="top"
    closeOnBlur={true}
    deburr={false}
    fluid={true}
    icon="dropdown"
    minCharacters={1}
    noResultsMessage="No results found."
    onChange={[Function]}
    openOnFocus={true}
    options={
      Array [
        Object {
          "key": "CONTACT_MAP",
          "text": "Contact Map",
          "value": "Contact Map",
        },
        Object {
          "key": "NGL",
          "text": "NGL",
          "value": "NGL",
        },
        Object {
          "key": "SPRING",
          "text": "Spring",
          "value": "Spring",
        },
        Object {
          "key": "T-SNE",
          "text": "T-SNE",
          "value": "T-SNE",
        },
      ]
    }
    placeholder="Select a Visualization!"
    renderLabel={[Function]}
    searchInput="text"
    selectOnBlur={true}
    selectOnNavigation={true}
    wrapSelection={true}
  />
  <Card
    fluid={true}
    raised={true}
  >
    <SpringComponentClass
      canvasBackgroundColor={13421772}
      data={
        Object {
          "links": Array [],
          "nodes": Array [],
        }
      }
      selectedCategory=""
    />
  </Card>
</div>
`;

exports[`VizSelectorPanel Should match existing snapshot when given initial viz of T-SNE. 1`] = `
<div
  className="VizSelectorPanel"
  style={
    Object {
      "width": 400,
    }
  }
>
  <Dropdown
    additionLabel="Add "
    additionPosition="top"
    closeOnBlur={true}
    deburr={false}
    fluid={true}
    icon="dropdown"
    minCharacters={1}
    noResultsMessage="No results found."
    onChange={[Function]}
    openOnFocus={true}
    options={
      Array [
        Object {
          "key": "CONTACT_MAP",
          "text": "Contact Map",
          "value": "Contact Map",
        },
        Object {
          "key": "NGL",
          "text": "NGL",
          "value": "NGL",
        },
        Object {
          "key": "SPRING",
          "text": "Spring",
          "value": "Spring",
        },
        Object {
          "key": "T-SNE",
          "text": "T-SNE",
          "value": "T-SNE",
        },
      ]
    }
    placeholder="Select a Visualization!"
    renderLabel={[Function]}
    searchInput="text"
    selectOnBlur={true}
    selectOnNavigation={true}
    wrapSelection={true}
  />
  <Card
    fluid={true}
    raised={true}
  >
    <TComponent
      height={400}
      margin={
        Object {
          "bottom": 20,
          "left": 20,
          "right": 20,
          "top": 20,
        }
      }
      width={400}
    />
  </Card>
</div>
`;

exports[`VizSelectorPanel Should match existing snapshot when given no initial visualization. 1`] = `
<div
  className="VizSelectorPanel"
  style={
    Object {
      "width": 400,
    }
  }
>
  <Dropdown
    additionLabel="Add "
    additionPosition="top"
    closeOnBlur={true}
    deburr={false}
    fluid={true}
    icon="dropdown"
    minCharacters={1}
    noResultsMessage="No results found."
    onChange={[Function]}
    openOnFocus={true}
    options={
      Array [
        Object {
          "key": "CONTACT_MAP",
          "text": "Contact Map",
          "value": "Contact Map",
        },
        Object {
          "key": "NGL",
          "text": "NGL",
          "value": "NGL",
        },
        Object {
          "key": "SPRING",
          "text": "Spring",
          "value": "Spring",
        },
        Object {
          "key": "T-SNE",
          "text": "T-SNE",
          "value": "T-SNE",
        },
      ]
    }
    placeholder="Select a Visualization!"
    renderLabel={[Function]}
    searchInput="text"
    selectOnBlur={true}
    selectOnNavigation={true}
    wrapSelection={true}
  />
  <Card
    fluid={true}
    raised={true}
  >
    <TComponent
      height={400}
      margin={
        Object {
          "bottom": 20,
          "left": 20,
          "right": 20,
          "top": 20,
        }
      }
      width={400}
    />
  </Card>
</div>
`;
