// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactMap Snapshots Should match existing snapshot when given empty data. 1`] = `<[object Object] />`;

exports[`ContactMap Snapshots Should match existing snapshot when given no data. 1`] = `<[object Object] />`;

exports[`ContactMap Snapshots Should match existing snapshot when given sample data and sliders are _not_ enabled. 1`] = `
<div
  id="ContactMapComponent"
  style={
    Object {
      "padding": 0,
    }
  }
>
  <div
    className="plotly-chart"
    style={
      Object {
        "marginBottom": 5,
      }
    }
  />
  <div
    style={
      Object {
        "fontFamily": "fira code",
        "fontSize": 16,
        "textAlign": "right",
      }
    }
  >
    -
    -
  </div>
</div>
`;

exports[`ContactMap Snapshots Should match existing snapshot when given sample data and sliders are enabled. 1`] = `
<div
  id="ContactMapComponent"
  style={
    Object {
      "padding": 0,
    }
  }
>
  <div
    className="plotly-chart"
    style={
      Object {
        "marginBottom": 5,
      }
    }
  />
  <div
    style={
      Object {
        "fontFamily": "fira code",
        "fontSize": 16,
        "textAlign": "right",
      }
    }
  >
    -
    -
  </div>
  <div
    className="accordion ui fluid styled"
  >
    <div
      className="title contact-map-configuration-toggle"
      onClick={[Function]}
    >
      <i
        aria-hidden="true"
        className="dropdown icon"
      />
      Configuration
    </div>
    <div
      className="content"
    >
      <div
        className="node-size-slider-0"
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <p>
          Observed Node Size: 4
        </p>
        <div
          className="rc-slider"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "width": 360,
            }
          }
        >
          <div
            className="rc-slider-rail"
            style={Object {}}
          />
          <div
            className="rc-slider-track"
            style={
              Object {
                "left": "0%",
                "width": "15.789473684210526%",
              }
            }
          />
          <div
            className="rc-slider-step"
          />
          <div
            aria-disabled={false}
            aria-valuemax={20}
            aria-valuemin={1}
            aria-valuenow={4}
            className="rc-slider-handle"
            role="slider"
            style={
              Object {
                "left": "15.789473684210526%",
              }
            }
            tabIndex={0}
          />
          <div
            className="rc-slider-mark"
          />
        </div>
      </div>
      <div
        className="node-size-slider-1"
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <p>
          Predicted Contact (59) Node Size: 4
        </p>
        <div
          className="rc-slider"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "width": 360,
            }
          }
        >
          <div
            className="rc-slider-rail"
            style={Object {}}
          />
          <div
            className="rc-slider-track"
            style={
              Object {
                "left": "0%",
                "width": "15.789473684210526%",
              }
            }
          />
          <div
            className="rc-slider-step"
          />
          <div
            aria-disabled={false}
            aria-valuemax={20}
            aria-valuemin={1}
            aria-valuenow={4}
            className="rc-slider-handle"
            role="slider"
            style={
              Object {
                "left": "15.789473684210526%",
              }
            }
            tabIndex={0}
          />
          <div
            className="rc-slider-mark"
          />
        </div>
      </div>
      <div
        className="node-size-slider-2"
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <p>
          Correct Prediction Node Size: 6
        </p>
        <div
          className="rc-slider"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "width": 360,
            }
          }
        >
          <div
            className="rc-slider-rail"
            style={Object {}}
          />
          <div
            className="rc-slider-track"
            style={
              Object {
                "left": "0%",
                "width": "26.31578947368421%",
              }
            }
          />
          <div
            className="rc-slider-step"
          />
          <div
            aria-disabled={false}
            aria-valuemax={20}
            aria-valuemin={1}
            aria-valuenow={6}
            className="rc-slider-handle"
            role="slider"
            style={
              Object {
                "left": "26.31578947368421%",
              }
            }
            tabIndex={0}
          />
          <div
            className="rc-slider-mark"
          />
        </div>
      </div>
      <div
        className="node-size-slider-3"
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <p>
          Selected Res. Pairs Node Size: 6
        </p>
        <div
          className="rc-slider"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "width": 360,
            }
          }
        >
          <div
            className="rc-slider-rail"
            style={Object {}}
          />
          <div
            className="rc-slider-track"
            style={
              Object {
                "left": "0%",
                "width": "26.31578947368421%",
              }
            }
          />
          <div
            className="rc-slider-step"
          />
          <div
            aria-disabled={false}
            aria-valuemax={20}
            aria-valuemin={1}
            aria-valuenow={6}
            className="rc-slider-handle"
            role="slider"
            style={
              Object {
                "left": "26.31578947368421%",
              }
            }
            tabIndex={0}
          />
          <div
            className="rc-slider-mark"
          />
        </div>
      </div>
      <div
        className="linear-dist-filter"
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <p>
          Linear Distance Filter (|i - j|): 5
        </p>
        <div
          className="rc-slider"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "width": 360,
            }
          }
        >
          <div
            className="rc-slider-rail"
            style={Object {}}
          />
          <div
            className="rc-slider-track"
            style={
              Object {
                "left": "0%",
                "width": "44.44444444444444%",
              }
            }
          />
          <div
            className="rc-slider-step"
          />
          <div
            aria-disabled={false}
            aria-valuemax={10}
            aria-valuemin={1}
            aria-valuenow={5}
            className="rc-slider-handle"
            role="slider"
            style={
              Object {
                "left": "44.44444444444444%",
              }
            }
            tabIndex={0}
          />
          <div
            className="rc-slider-mark"
          />
        </div>
      </div>
      <div
        className="predicted-contact-slider"
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <p>
          Top N Predictions to Show: 29
        </p>
        <div
          className="rc-slider"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "width": 360,
            }
          }
        >
          <div
            className="rc-slider-rail"
            style={Object {}}
          />
          <div
            className="rc-slider-track"
            style={
              Object {
                "left": "0%",
                "width": "48.275862068965516%",
              }
            }
          />
          <div
            className="rc-slider-step"
          />
          <div
            aria-disabled={false}
            aria-valuemax={59}
            aria-valuemin={1}
            aria-valuenow={29}
            className="rc-slider-handle"
            role="slider"
            style={
              Object {
                "left": "48.275862068965516%",
              }
            }
            tabIndex={0}
          />
          <div
            className="rc-slider-mark"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`ContactMap Snapshots Should match snapshot when locked residues are added. 1`] = `
<ContactMapClass
  addCandidateResidues={[Function]}
  addHoveredResidues={[Function]}
  addLockedResiduePair={[Function]}
  candidateResidues={Array []}
  clearAllResidues={[Function]}
  correctColor="#ff0000"
  data={
    Object {
      "couplingScores": Array [
        Object {
          "dist": 2.4,
          "i": 56,
          "j": 50,
        },
        Object {
          "dist": 20.4,
          "i": 42,
          "j": 50,
        },
        Object {
          "dist": 1.3,
          "i": 41,
          "j": 52,
        },
        Object {
          "dist": 1.3,
          "i": 45,
          "j": 46,
        },
        Object {
          "dist": 1.3,
          "i": 44,
          "j": 45,
        },
        Object {
          "dist": 1.3,
          "i": 56,
          "j": 57,
        },
      ],
      "secondaryStructures": Array [
        Object {
          "resno": 30,
          "structId": "C",
        },
        Object {
          "resno": 31,
          "structId": "C",
        },
      ],
    }
  }
  enableSliders={false}
  height={400}
  highlightColor="#ff8800"
  hoveredResidues={Array []}
  incorrectColor="#000000"
  lockedResiduePairs={
    Object {
      "37,46": Array [
        37,
        46,
      ],
      "8": Array [
        8,
      ],
    }
  }
  observedColor="#0000ff"
  padding={0}
  removeAllLockedResiduePairs={[Function]}
  removeCandidateResidues={[Function]}
  removeHoveredResidues={[Function]}
  removeLockedResiduePair={[Function]}
  toggleLockedResiduePair={[Function]}
  width={400}
>
  <div
    id="ContactMapComponent"
    style={
      Object {
        "padding": 0,
      }
    }
  >
    <ContactMapChartClass
      candidateResidues={Array []}
      data={
        Array [
          Object {
            "hoverinfo": "x+y",
            "marker": Object {
              "colorscale": Array [
                Array [
                  0,
                  "#0000ff",
                ],
                Array [
                  1,
                  "rgb(100,177,200)",
                ],
              ],
            },
            "name": "Observed",
            "nodeSize": 4,
            "points": Array [
              Object {
                "dist": 2.4,
                "i": 56,
                "j": 50,
              },
              Object {
                "dist": 1.3,
                "i": 41,
                "j": 52,
              },
              Object {
                "dist": 1.3,
                "i": 45,
                "j": 46,
              },
              Object {
                "dist": 1.3,
                "i": 44,
                "j": 45,
              },
              Object {
                "dist": 1.3,
                "i": 56,
                "j": 57,
              },
            ],
          },
          Object {
            "hoverinfo": "x+y",
            "marker": Object {
              "color": "#000000",
            },
            "name": "Predicted Contact (57)",
            "nodeSize": 4,
            "points": Array [
              Object {
                "dist": 2.4,
                "i": 56,
                "j": 50,
              },
              Object {
                "dist": 20.4,
                "i": 42,
                "j": 50,
              },
              Object {
                "dist": 1.3,
                "i": 41,
                "j": 52,
              },
            ],
          },
          Object {
            "hoverinfo": "x+y",
            "marker": Object {
              "color": "#ff0000",
            },
            "name": "Correct Prediction",
            "nodeSize": 6,
            "points": Array [
              Object {
                "dist": 2.4,
                "i": 56,
                "j": 50,
              },
              Object {
                "dist": 1.3,
                "i": 41,
                "j": 52,
              },
            ],
          },
          Object {
            "hoverinfo": "none",
            "marker": Object {
              "color": "#ff8800",
              "line": Object {
                "color": "#ff8800",
                "width": 3,
              },
              "symbol": "circle-open",
            },
            "name": "Selected Res. Pairs",
            "nodeSize": 6,
            "points": Array [
              Object {
                "dist": 0,
                "i": 37,
                "j": 46,
              },
            ],
          },
        ]
      }
      dataTransformFn={[Function]}
      heightModifier={0.3}
      hoveredResidues={Array []}
      legendModifiers={
        Object {
          "y": -0.1,
        }
      }
      marginModifiers={
        Object {
          "b": 40,
        }
      }
      onClickCallback={[Function]}
      onHoverCallback={[Function]}
      onSelectedCallback={[Function]}
      onUnHoverCallback={[Function]}
      range={
        Array [
          0,
          62,
        ]
      }
    >
      <PlotlyChartClass
        config={Object {}}
        data={
          Array [
            Object {
              "hoverinfo": "none",
              "marker": Object {
                "color": Array [
                  2.4,
                  1.3,
                  1.3,
                  1.3,
                  1.3,
                  2.4,
                  1.3,
                  1.3,
                  1.3,
                  1.3,
                ],
                "colorscale": Array [
                  Array [
                    0,
                    "#0000ff",
                  ],
                  Array [
                    1,
                    "rgb(100,177,200)",
                  ],
                ],
                "size": 4,
              },
              "mode": "markers",
              "name": "Observed",
              "type": "scattergl",
              "x": Array [
                56,
                41,
                45,
                44,
                56,
                50,
                52,
                46,
                45,
                57,
              ],
              "y": Array [
                50,
                52,
                46,
                45,
                57,
                56,
                41,
                45,
                44,
                56,
              ],
              "z": Array [
                2.4,
                1.3,
                1.3,
                1.3,
                1.3,
                2.4,
                1.3,
                1.3,
                1.3,
                1.3,
              ],
            },
            Object {
              "hoverinfo": "none",
              "marker": Object {
                "color": "#000000",
                "size": 4,
              },
              "mode": "markers",
              "name": "Predicted Contact (57)",
              "type": "scattergl",
              "x": Array [
                56,
                42,
                41,
                50,
                50,
                52,
              ],
              "y": Array [
                50,
                50,
                52,
                56,
                42,
                41,
              ],
              "z": Array [
                2.4,
                20.4,
                1.3,
                2.4,
                20.4,
                1.3,
              ],
            },
            Object {
              "hoverinfo": "none",
              "marker": Object {
                "color": "#ff0000",
                "size": 6,
              },
              "mode": "markers",
              "name": "Correct Prediction",
              "type": "scattergl",
              "x": Array [
                56,
                41,
                50,
                52,
              ],
              "y": Array [
                50,
                52,
                56,
                41,
              ],
              "z": Array [
                2.4,
                1.3,
                2.4,
                1.3,
              ],
            },
            Object {
              "hoverinfo": "none",
              "marker": Object {
                "color": "#ff8800",
                "line": Object {
                  "color": "#ff8800",
                  "width": 3,
                },
                "size": 6,
                "symbol": "circle-open",
              },
              "mode": "markers",
              "name": "Selected Res. Pairs",
              "type": "scattergl",
              "x": Array [
                37,
                46,
              ],
              "y": Array [
                46,
                37,
              ],
              "z": Array [
                0,
                0,
              ],
            },
          ]
        }
        layout={
          Object {
            "height": 520,
            "legend": Object {
              "orientation": "h",
              "y": -0.4,
              "yanchor": "bottom",
            },
            "margin": Object {
              "b": 160,
            },
            "showlegend": true,
            "xaxis": Object {
              "autorange": false,
              "dtick": 10,
              "range": Array [
                0,
                62,
              ],
              "showline": true,
              "tickmode": "linear",
              "title": "Residue #",
            },
            "yaxis": Object {
              "autorange": false,
              "dtick": 10,
              "range": Array [
                62,
                0,
              ],
              "showline": true,
              "tickmode": "linear",
              "title": "Residue #",
            },
          }
        }
        onClickCallback={[Function]}
        onHoverCallback={[Function]}
        onSelectedCallback={[Function]}
        onUnHoverCallback={[Function]}
      >
        <div
          className="plotly-chart"
          style={
            Object {
              "marginBottom": 5,
            }
          }
        />
      </PlotlyChartClass>
    </ContactMapChartClass>
    <SecondaryStructure
      sequence={
        Array [
          "C",
          "C",
        ]
      }
    >
      <div
        style={
          Object {
            "fontFamily": "fira code",
            "fontSize": 16,
            "textAlign": "right",
          }
        }
      >
        -
        -
      </div>
    </SecondaryStructure>
  </div>
</ContactMapClass>
`;
