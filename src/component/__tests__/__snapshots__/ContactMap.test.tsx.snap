// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactMap Should match existing snapshot using ScatterGL is toggled off. 1`] = `
<ContactMapClass
  correctColor="#ff0000"
  data={
    Object {
      "couplingScores": Array [],
    }
  }
  enableSliders={false}
  height={400}
  highlightColor="#ff0000"
  incorrectColor="#000000"
  observedColor="#0000ff"
  padding={0}
  width={400}
>
  <div
    id="ContactMapComponent"
    style={
      Object {
        "padding": 0,
      }
    }
  >
    <PointCloudChartClass
      candidateResidues={Array []}
      data={
        Array [
          Object {
            "color": "#ff0000",
            "points": Array [],
          },
          Object {
            "color": "#000000",
            "points": Array [],
          },
          Object {
            "color": "#0000ff",
            "points": Array [],
          },
        ]
      }
      height={400}
      hoveredResidues={Array []}
      nodeSize={3}
      onClickCallback={[Function]}
      onHoverCallback={[Function]}
      onSelectedCallback={[Function]}
      onUnHoverCallback={[Function]}
      width={400}
    >
      <PlotlyChart
        config={
          Object {
            "displayModeBar": true,
          }
        }
        data={
          Array [
            Object {
              "marker": Object {
                "color": "#ff0000",
                "sizemax": 6,
                "sizemin": 3,
              },
              "mode": "markers",
              "type": "pointcloud",
              "xy": Float32Array [],
            },
            Object {
              "marker": Object {
                "color": "#000000",
                "sizemax": 6,
                "sizemin": 3,
              },
              "mode": "markers",
              "type": "pointcloud",
              "xy": Float32Array [],
            },
            Object {
              "marker": Object {
                "color": "#0000ff",
                "sizemax": 6,
                "sizemin": 3,
              },
              "mode": "markers",
              "type": "pointcloud",
              "xy": Float32Array [],
            },
          ]
        }
        layout={
          Object {
            "height": 400,
            "legend": Object {},
            "showlegend": false,
            "title": "",
            "width": 400,
            "xaxis": Object {
              "gridcolor": "#ff0000",
              "gridwidth": 3,
              "showticklabels": false,
              "tickvals": Array [],
            },
            "yaxis": Object {
              "autorange": "reversed",
              "gridcolor": "#ff0000",
              "gridwidth": 3,
              "showticklabels": false,
              "tickvals": Array [],
            },
          }
        }
        onClickCallback={[Function]}
        onHoverCallback={[Function]}
        onSelectedCallback={[Function]}
        onUnHoverCallback={[Function]}
      >
        <div />
      </PlotlyChart>
    </PointCloudChartClass>
    <Checkbox
      defaultChecked={false}
      label="Point Cloud"
      onChange={[Function]}
      toggle={true}
      type="checkbox"
    >
      <div
        className="ui toggle checkbox"
        onChange={[Function]}
        onClick={[Function]}
        onMouseDown={[Function]}
      >
        <input
          checked={false}
          className="hidden"
          onClick={[Function]}
          readOnly={true}
          tabIndex={0}
          type="checkbox"
        />
        <label
          key="Point Cloud"
        >
          Point Cloud
        </label>
      </div>
    </Checkbox>
    <ChellSlider
      defaultValue={1}
      hideLabelValue={true}
      label="What to show?"
      max={2}
      min={0}
      onChange={[Function]}
      sliderProps={
        Object {
          "marks": Object {
            "0": "Observed",
            "1": "Both",
            "2": "Predicted",
          },
        }
      }
      style={
        Object {
          "width": 400,
        }
      }
    >
      <div
        style={
          Object {
            "padding": 5,
          }
        }
      >
        <ComponentEnhancer(undefined)
          activeDotStyle={Object {}}
          className=""
          defaultValue={1}
          disabled={false}
          dotStyle={Object {}}
          dots={false}
          handle={[Function]}
          handleStyle={
            Array [
              Object {},
            ]
          }
          included={true}
          marks={
            Object {
              "0": "Observed",
              "1": "Both",
              "2": "Predicted",
            }
          }
          max={2}
          min={0}
          onAfterChange={[Function]}
          onBeforeChange={[Function]}
          onChange={[Function]}
          prefixCls="rc-slider"
          railStyle={Object {}}
          step={1}
          style={
            Object {
              "width": 400,
            }
          }
          trackStyle={
            Array [
              Object {},
            ]
          }
          vertical={false}
        >
          <div
            className="rc-slider rc-slider-with-marks"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "width": 400,
              }
            }
          >
            <div
              className="rc-slider-rail"
              style={Object {}}
            />
            <Track
              className="rc-slider-track"
              included={true}
              length={50}
              offset={0}
              style={Object {}}
              vertical={false}
            >
              <div
                className="rc-slider-track"
                style={
                  Object {
                    "left": "0%",
                    "width": "50%",
                  }
                }
              />
            </Track>
            <Steps
              activeDotStyle={Object {}}
              dotStyle={Object {}}
              dots={false}
              included={true}
              lowerBound={0}
              marks={
                Object {
                  "0": "Observed",
                  "1": "Both",
                  "2": "Predicted",
                }
              }
              max={2}
              min={0}
              prefixCls="rc-slider"
              step={1}
              upperBound={1}
              vertical={false}
            >
              <div
                className="rc-slider-step"
              >
                <span
                  className="rc-slider-dot rc-slider-dot-active"
                  key="0"
                  style={
                    Object {
                      "left": "0%",
                    }
                  }
                />
                <span
                  className="rc-slider-dot rc-slider-dot-active"
                  key="1"
                  style={
                    Object {
                      "left": "50%",
                    }
                  }
                />
                <span
                  className="rc-slider-dot"
                  key="2"
                  style={
                    Object {
                      "left": "100%",
                    }
                  }
                />
              </div>
            </Steps>
            <Handle
              className="rc-slider-handle"
              disabled={false}
              key="0"
              max={2}
              min={0}
              offset={50}
              style={Object {}}
              value={1}
              vertical={false}
            >
              <div
                aria-disabled={false}
                aria-valuemax={2}
                aria-valuemin={0}
                aria-valuenow={1}
                className="rc-slider-handle"
                role="slider"
                style={
                  Object {
                    "left": "50%",
                  }
                }
                tabIndex={0}
              />
            </Handle>
            <Marks
              className="rc-slider-mark"
              included={true}
              lowerBound={0}
              marks={
                Object {
                  "0": "Observed",
                  "1": "Both",
                  "2": "Predicted",
                }
              }
              max={2}
              min={0}
              upperBound={1}
              vertical={false}
            >
              <div
                className="rc-slider-mark"
              >
                <span
                  className="rc-slider-mark-text rc-slider-mark-text-active"
                  key="0"
                  style={
                    Object {
                      "left": "0%",
                      "marginLeft": "-22.5%",
                      "width": "45%",
                    }
                  }
                >
                  Observed
                </span>
                <span
                  className="rc-slider-mark-text rc-slider-mark-text-active"
                  key="1"
                  style={
                    Object {
                      "left": "50%",
                      "marginLeft": "-22.5%",
                      "width": "45%",
                    }
                  }
                >
                  Both
                </span>
                <span
                  className="rc-slider-mark-text"
                  key="2"
                  style={
                    Object {
                      "left": "100%",
                      "marginLeft": "-22.5%",
                      "width": "45%",
                    }
                  }
                >
                  Predicted
                </span>
              </div>
            </Marks>
          </div>
        </ComponentEnhancer(undefined)>
      </div>
    </ChellSlider>
  </div>
</ContactMapClass>
`;

exports[`ContactMap Should match existing snapshot using ScatterGL is toggled on. 1`] = `
<ContactMapClass
  correctColor="#ff0000"
  data={
    Object {
      "couplingScores": Array [],
    }
  }
  enableSliders={false}
  height={400}
  highlightColor="#ff0000"
  incorrectColor="#000000"
  observedColor="#0000ff"
  padding={0}
  width={400}
>
  <div
    id="ContactMapComponent"
    style={
      Object {
        "padding": 0,
      }
    }
  >
    <ScatterChartClass
      candidateResidues={Array []}
      data={
        Array [
          Object {
            "color": "#ff0000",
            "points": Array [],
          },
          Object {
            "color": "#000000",
            "points": Array [],
          },
          Object {
            "color": "#0000ff",
            "points": Array [],
          },
        ]
      }
      height={400}
      hoveredResidues={Array []}
      nodeSize={3}
      onClickCallback={[Function]}
      onHoverCallback={[Function]}
      onSelectedCallback={[Function]}
      onUnHoverCallback={[Function]}
      width={400}
    >
      <PlotlyChart
        config={
          Object {
            "displayModeBar": true,
          }
        }
        data={
          Array [
            Object {
              "marker": Object {
                "color": "#ff0000",
                "size": 6,
              },
              "mode": "markers",
              "type": "scattergl",
              "x": Array [],
              "y": Array [],
            },
            Object {
              "marker": Object {
                "color": "#000000",
                "size": 6,
              },
              "mode": "markers",
              "type": "scattergl",
              "x": Array [],
              "y": Array [],
            },
            Object {
              "marker": Object {
                "color": "#0000ff",
                "size": 6,
              },
              "mode": "markers",
              "type": "scattergl",
              "x": Array [],
              "y": Array [],
            },
          ]
        }
        layout={
          Object {
            "height": 400,
            "legend": Object {},
            "showlegend": false,
            "title": "",
            "width": 400,
            "xaxis": Object {
              "gridcolor": "#ff0000",
              "gridwidth": 3,
              "showticklabels": false,
              "tickvals": Array [],
            },
            "yaxis": Object {
              "autorange": "reversed",
              "gridcolor": "#ff0000",
              "gridwidth": 3,
              "showticklabels": false,
              "tickvals": Array [],
            },
          }
        }
        onClickCallback={[Function]}
        onHoverCallback={[Function]}
        onSelectedCallback={[Function]}
        onUnHoverCallback={[Function]}
      >
        <div />
      </PlotlyChart>
    </ScatterChartClass>
    <Checkbox
      defaultChecked={false}
      label="ScatterGL"
      onChange={[Function]}
      toggle={true}
      type="checkbox"
    >
      <div
        className="ui toggle checkbox"
        onChange={[Function]}
        onClick={[Function]}
        onMouseDown={[Function]}
      >
        <input
          checked={false}
          className="hidden"
          onClick={[Function]}
          readOnly={true}
          tabIndex={0}
          type="checkbox"
        />
        <label
          key="ScatterGL"
        >
          ScatterGL
        </label>
      </div>
    </Checkbox>
    <ChellSlider
      defaultValue={1}
      hideLabelValue={true}
      label="What to show?"
      max={2}
      min={0}
      onChange={[Function]}
      sliderProps={
        Object {
          "marks": Object {
            "0": "Observed",
            "1": "Both",
            "2": "Predicted",
          },
        }
      }
      style={
        Object {
          "width": 400,
        }
      }
    >
      <div
        style={
          Object {
            "padding": 5,
          }
        }
      >
        <ComponentEnhancer(undefined)
          activeDotStyle={Object {}}
          className=""
          defaultValue={1}
          disabled={false}
          dotStyle={Object {}}
          dots={false}
          handle={[Function]}
          handleStyle={
            Array [
              Object {},
            ]
          }
          included={true}
          marks={
            Object {
              "0": "Observed",
              "1": "Both",
              "2": "Predicted",
            }
          }
          max={2}
          min={0}
          onAfterChange={[Function]}
          onBeforeChange={[Function]}
          onChange={[Function]}
          prefixCls="rc-slider"
          railStyle={Object {}}
          step={1}
          style={
            Object {
              "width": 400,
            }
          }
          trackStyle={
            Array [
              Object {},
            ]
          }
          vertical={false}
        >
          <div
            className="rc-slider rc-slider-with-marks"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "width": 400,
              }
            }
          >
            <div
              className="rc-slider-rail"
              style={Object {}}
            />
            <Track
              className="rc-slider-track"
              included={true}
              length={50}
              offset={0}
              style={Object {}}
              vertical={false}
            >
              <div
                className="rc-slider-track"
                style={
                  Object {
                    "left": "0%",
                    "width": "50%",
                  }
                }
              />
            </Track>
            <Steps
              activeDotStyle={Object {}}
              dotStyle={Object {}}
              dots={false}
              included={true}
              lowerBound={0}
              marks={
                Object {
                  "0": "Observed",
                  "1": "Both",
                  "2": "Predicted",
                }
              }
              max={2}
              min={0}
              prefixCls="rc-slider"
              step={1}
              upperBound={1}
              vertical={false}
            >
              <div
                className="rc-slider-step"
              >
                <span
                  className="rc-slider-dot rc-slider-dot-active"
                  key="0"
                  style={
                    Object {
                      "left": "0%",
                    }
                  }
                />
                <span
                  className="rc-slider-dot rc-slider-dot-active"
                  key="1"
                  style={
                    Object {
                      "left": "50%",
                    }
                  }
                />
                <span
                  className="rc-slider-dot"
                  key="2"
                  style={
                    Object {
                      "left": "100%",
                    }
                  }
                />
              </div>
            </Steps>
            <Handle
              className="rc-slider-handle"
              disabled={false}
              key="0"
              max={2}
              min={0}
              offset={50}
              style={Object {}}
              value={1}
              vertical={false}
            >
              <div
                aria-disabled={false}
                aria-valuemax={2}
                aria-valuemin={0}
                aria-valuenow={1}
                className="rc-slider-handle"
                role="slider"
                style={
                  Object {
                    "left": "50%",
                  }
                }
                tabIndex={0}
              />
            </Handle>
            <Marks
              className="rc-slider-mark"
              included={true}
              lowerBound={0}
              marks={
                Object {
                  "0": "Observed",
                  "1": "Both",
                  "2": "Predicted",
                }
              }
              max={2}
              min={0}
              upperBound={1}
              vertical={false}
            >
              <div
                className="rc-slider-mark"
              >
                <span
                  className="rc-slider-mark-text rc-slider-mark-text-active"
                  key="0"
                  style={
                    Object {
                      "left": "0%",
                      "marginLeft": "-22.5%",
                      "width": "45%",
                    }
                  }
                >
                  Observed
                </span>
                <span
                  className="rc-slider-mark-text rc-slider-mark-text-active"
                  key="1"
                  style={
                    Object {
                      "left": "50%",
                      "marginLeft": "-22.5%",
                      "width": "45%",
                    }
                  }
                >
                  Both
                </span>
                <span
                  className="rc-slider-mark-text"
                  key="2"
                  style={
                    Object {
                      "left": "100%",
                      "marginLeft": "-22.5%",
                      "width": "45%",
                    }
                  }
                >
                  Predicted
                </span>
              </div>
            </Marks>
          </div>
        </ComponentEnhancer(undefined)>
      </div>
    </ChellSlider>
  </div>
</ContactMapClass>
`;

exports[`ContactMap Should match existing snapshot when given empty data. 1`] = `<[object Object] />`;

exports[`ContactMap Should match existing snapshot when given no data. 1`] = `<[object Object] />`;

exports[`ContactMap Should match existing snapshot when given sample data and sliders are _not_ enabled. 1`] = `
<div
  id="ContactMapComponent"
  style={
    Object {
      "padding": 0,
    }
  }
>
  <div />
  <div
    className="ui toggle checkbox"
    onChange={[Function]}
    onClick={[Function]}
    onMouseDown={[Function]}
  >
    <input
      checked={false}
      className="hidden"
      id={undefined}
      name={undefined}
      onClick={[Function]}
      readOnly={true}
      tabIndex={0}
      type="checkbox"
      value={undefined}
    />
    <label
      htmlFor={undefined}
    >
      ScatterGL
    </label>
  </div>
  <div
    style={
      Object {
        "padding": 5,
      }
    }
  >
    <div
      className="rc-slider rc-slider-with-marks"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onTouchStart={[Function]}
      style={
        Object {
          "width": 400,
        }
      }
    >
      <div
        className="rc-slider-rail"
        style={Object {}}
      />
      <div
        className="rc-slider-track"
        style={
          Object {
            "left": "0%",
            "width": "50%",
          }
        }
      />
      <div
        className="rc-slider-step"
      >
        <span
          className="rc-slider-dot rc-slider-dot-active"
          style={
            Object {
              "left": "0%",
            }
          }
        />
        <span
          className="rc-slider-dot rc-slider-dot-active"
          style={
            Object {
              "left": "50%",
            }
          }
        />
        <span
          className="rc-slider-dot"
          style={
            Object {
              "left": "100%",
            }
          }
        />
      </div>
      <div
        aria-disabled={false}
        aria-valuemax={2}
        aria-valuemin={0}
        aria-valuenow={1}
        className="rc-slider-handle"
        role="slider"
        style={
          Object {
            "left": "50%",
          }
        }
        tabIndex={0}
      />
      <div
        className="rc-slider-mark"
      >
        <span
          className="rc-slider-mark-text rc-slider-mark-text-active"
          style={
            Object {
              "left": "0%",
              "marginLeft": "-22.5%",
              "width": "45%",
            }
          }
        >
          Observed
        </span>
        <span
          className="rc-slider-mark-text rc-slider-mark-text-active"
          style={
            Object {
              "left": "50%",
              "marginLeft": "-22.5%",
              "width": "45%",
            }
          }
        >
          Both
        </span>
        <span
          className="rc-slider-mark-text"
          style={
            Object {
              "left": "100%",
              "marginLeft": "-22.5%",
              "width": "45%",
            }
          }
        >
          Predicted
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`ContactMap Should match existing snapshot when given sample data and sliders are enabled. 1`] = `
<div
  id="ContactMapComponent"
  style={
    Object {
      "padding": 0,
    }
  }
>
  <div />
  <div>
    <div
      style={
        Object {
          "padding": 5,
        }
      }
    >
      <p>
        Probability: 99
      </p>
      <div
        className="rc-slider"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "width": 400,
          }
        }
      >
        <div
          className="rc-slider-rail"
          style={Object {}}
        />
        <div
          className="rc-slider-track"
          style={
            Object {
              "left": "0%",
              "width": "99%",
            }
          }
        />
        <div
          className="rc-slider-step"
        />
        <div
          aria-disabled={false}
          aria-valuemax={100}
          aria-valuemin={0}
          aria-valuenow={99}
          className="rc-slider-handle"
          role="slider"
          style={
            Object {
              "left": "99%",
            }
          }
          tabIndex={0}
        />
        <div
          className="rc-slider-mark"
        />
      </div>
    </div>
    <div
      style={
        Object {
          "padding": 5,
        }
      }
    >
      <p>
        Node Size: 3
      </p>
      <div
        className="rc-slider"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "width": 400,
          }
        }
      >
        <div
          className="rc-slider-rail"
          style={Object {}}
        />
        <div
          className="rc-slider-track"
          style={
            Object {
              "left": "0%",
              "width": "50%",
            }
          }
        />
        <div
          className="rc-slider-step"
        />
        <div
          aria-disabled={false}
          aria-valuemax={5}
          aria-valuemin={1}
          aria-valuenow={3}
          className="rc-slider-handle"
          role="slider"
          style={
            Object {
              "left": "50%",
            }
          }
          tabIndex={0}
        />
        <div
          className="rc-slider-mark"
        />
      </div>
    </div>
  </div>
  <div
    className="ui toggle checkbox"
    onChange={[Function]}
    onClick={[Function]}
    onMouseDown={[Function]}
  >
    <input
      checked={false}
      className="hidden"
      id={undefined}
      name={undefined}
      onClick={[Function]}
      readOnly={true}
      tabIndex={0}
      type="checkbox"
      value={undefined}
    />
    <label
      htmlFor={undefined}
    >
      ScatterGL
    </label>
  </div>
  <div
    style={
      Object {
        "padding": 5,
      }
    }
  >
    <div
      className="rc-slider rc-slider-with-marks"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onTouchStart={[Function]}
      style={
        Object {
          "width": 400,
        }
      }
    >
      <div
        className="rc-slider-rail"
        style={Object {}}
      />
      <div
        className="rc-slider-track"
        style={
          Object {
            "left": "0%",
            "width": "50%",
          }
        }
      />
      <div
        className="rc-slider-step"
      >
        <span
          className="rc-slider-dot rc-slider-dot-active"
          style={
            Object {
              "left": "0%",
            }
          }
        />
        <span
          className="rc-slider-dot rc-slider-dot-active"
          style={
            Object {
              "left": "50%",
            }
          }
        />
        <span
          className="rc-slider-dot"
          style={
            Object {
              "left": "100%",
            }
          }
        />
      </div>
      <div
        aria-disabled={false}
        aria-valuemax={2}
        aria-valuemin={0}
        aria-valuenow={1}
        className="rc-slider-handle"
        role="slider"
        style={
          Object {
            "left": "50%",
          }
        }
        tabIndex={0}
      />
      <div
        className="rc-slider-mark"
      >
        <span
          className="rc-slider-mark-text rc-slider-mark-text-active"
          style={
            Object {
              "left": "0%",
              "marginLeft": "-22.5%",
              "width": "45%",
            }
          }
        >
          Observed
        </span>
        <span
          className="rc-slider-mark-text rc-slider-mark-text-active"
          style={
            Object {
              "left": "50%",
              "marginLeft": "-22.5%",
              "width": "45%",
            }
          }
        >
          Both
        </span>
        <span
          className="rc-slider-mark-text"
          style={
            Object {
              "left": "100%",
              "marginLeft": "-22.5%",
              "width": "45%",
            }
          }
        >
          Predicted
        </span>
      </div>
    </div>
  </div>
</div>
`;
