// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactMapComponent Should match existing snapshot when given empty data. 1`] = `
<div
  style={
    Object {
      "padding": 10,
    }
  }
>
  <PlotlyChart
    config={
      Object {
        "displayModeBar": true,
      }
    }
    data={
      Array [
        Object {
          "marker": Object {
            "color": "#009999",
            "sizemax": 8,
            "sizemin": 4,
          },
          "mode": "markers",
          "type": "pointcloud",
          "xy": Float32Array [],
        },
        Object {
          "marker": Object {
            "color": "#000000",
            "sizemax": 8,
            "sizemin": 4,
          },
          "mode": "markers",
          "type": "pointcloud",
          "x": Array [],
          "y": Array [],
        },
      ]
    }
    layout={
      Object {
        "height": 440,
        "legend": Object {},
        "showlegend": false,
        "width": 440,
        "yaxis": Object {
          "autorange": "reversed",
        },
      }
    }
  />
  <div>
    <ChellSlider
      defaultValue={99}
      label="Probability"
      max={100}
      min={0}
      onChange={[Function]}
    />
    <ChellSlider
      defaultValue={4}
      label="Node Size"
      max={5}
      min={1}
      onChange={[Function]}
    />
  </div>
</div>
`;

exports[`ContactMapComponent Should match existing snapshot when given no data. 1`] = `
<div
  style={
    Object {
      "padding": 10,
    }
  }
>
  <PlotlyChart
    config={
      Object {
        "displayModeBar": true,
      }
    }
    data={
      Array [
        Object {
          "marker": Object {
            "color": "#009999",
            "sizemax": 8,
            "sizemin": 4,
          },
          "mode": "markers",
          "type": "pointcloud",
          "xy": Float32Array [],
        },
        Object {
          "marker": Object {
            "color": "#000000",
            "sizemax": 8,
            "sizemin": 4,
          },
          "mode": "markers",
          "type": "pointcloud",
          "x": Array [],
          "y": Array [],
        },
      ]
    }
    layout={
      Object {
        "height": 440,
        "legend": Object {},
        "showlegend": false,
        "width": 440,
        "yaxis": Object {
          "autorange": "reversed",
        },
      }
    }
  />
  <div>
    <ChellSlider
      defaultValue={99}
      label="Probability"
      max={100}
      min={0}
      onChange={[Function]}
    />
    <ChellSlider
      defaultValue={4}
      label="Node Size"
      max={5}
      min={1}
      onChange={[Function]}
    />
  </div>
</div>
`;

exports[`ContactMapComponent Should match existing snapshot when given sample data. 1`] = `
<div
  style={
    Object {
      "padding": 10,
    }
  }
>
  <PlotlyChart
    config={
      Object {
        "displayModeBar": true,
      }
    }
    data={
      Array [
        Object {
          "marker": Object {
            "color": "#009999",
            "sizemax": 8,
            "sizemin": 4,
          },
          "mode": "markers",
          "type": "pointcloud",
          "xy": Float32Array [
            0,
            1,
            1,
            0,
          ],
        },
        Object {
          "marker": Object {
            "color": "#000000",
            "sizemax": 8,
            "sizemin": 4,
          },
          "mode": "markers",
          "type": "pointcloud",
          "x": Array [
            0,
            1,
          ],
          "y": Array [
            1,
            0,
          ],
        },
      ]
    }
    layout={
      Object {
        "height": 440,
        "legend": Object {},
        "showlegend": false,
        "width": 440,
        "yaxis": Object {
          "autorange": "reversed",
        },
      }
    }
  />
  <div>
    <ChellSlider
      defaultValue={99}
      label="Probability"
      max={100}
      min={0}
      onChange={[Function]}
    />
    <ChellSlider
      defaultValue={4}
      label="Node Size"
      max={5}
      min={1}
      onChange={[Function]}
    />
  </div>
</div>
`;
